@mixin dragHandleStyles(
  $borderRadiusProperty,
  $borderToRemoveProperty1,
  $borderToRemoveProperty2,
  $distanceProperty1,
  $distanceProperty2
) {
  #{$borderRadiusProperty}: 100px;
  #{$borderToRemoveProperty1}: transparent;
  #{$borderToRemoveProperty2}: transparent;
  #{$distanceProperty1}: -2px;
  #{$distanceProperty2}: -2px;
}

.shotMaker {
  width: 90vw;
  min-height: 50vh;
  display: flex;
  box-shadow: var(--shotMakerShadow);

  .ReactCrop {
    width: 75%;
  }

  .detailShots {
    width: 25%;
    background-color: var(--detailShotAreaColor);
  }
}

.ReactCrop__crop-selection {
  border: var(--dragHandleBorderWidth) solid var(--dragHandleColor);
  border-radius: 5px;
  box-shadow: 0 0 0 9999em rgba(255, 255, 255, 0.5);
}

.ReactCrop__drag-handle {
  &::after {
    border-width: var(--dragHandleBorderWidth);
    border-color: var(--dragHandleColor);
    background-color: transparent;
    width: 9px;
    height: 9px;
  }

  &.ord-n,
  &.ord-s,
  &.ord-w,
  &.ord-e {
    display: none;
  }

  &.ord-ne::after{
    @include dragHandleStyles(
      border-top-right-radius,
      border-bottom,
      border-left,
      top,
      right
    );
  }

  &.ord-nw::after{
    @include dragHandleStyles(
      border-top-left-radius,
      border-bottom,
      border-right,
      top,
      left
    );
  }

  &.ord-se::after{
    @include dragHandleStyles(
      border-bottom-right-radius,
      border-top,
      border-left,
      bottom,
      right
    );
  }

  &.ord-sw::after{
    @include dragHandleStyles(
      border-bottom-left-radius,
      border-top,
      border-right,
      bottom,
      left
    );
  }
}

.ReactCrop__drag-bar {
  display: none;
}
